basic-chess:
  name: "Basic Chess"
  page: "/projects/Basic-Chess/"
  author: "Ryan Laffoon"
  year: 2016
  type: "personal"
  action: "Built"
  blurb: "Simple HTML application for a chess game."
  description: "I built a chess game - WIP"
  url: "https://ryanlaffoon.github.io/basic-chess/"
  tags: "HTML, CSS, JavaScript, jQuery"
  icon: "glyphicon glyphicon-king fa-fw"
  
 solar-system:
  name: "Solar System"
  page: "/projects/Solar-System/"
  author: "Ryan Laffoon"
  year: 2016
  type: "personal"
  action: "Built"
  blurb: "Simple HTML application to simulate movement of planetary bodies in the solar system."
  description: "This little application stemmed from a Codecademy course called Sun, Earth and Code. I thought to expand the context of the simulation a little to show additional planets. While at first I was simply making a repetitive animation, I soon found myself looking up orbital periods, diameters and distances & making spreadsheets. Currently, the terrestrial and Jovian planets are visible (Mercury through Neptune), their 'average' colors and sizes are relatively accurate, along with their distance from the 'Sun', though none of the 'Simulation' is to scale. The sun is almost entirely absent from this simulation, displaying as a single pixel in the center of the system - This is intentional, as the scales of the planets to the sun is too small to accurately render & I wanted to focus on the planetary bodies themselves here. The speed of the simulation is set so that one orbit of Mercury lasts 1 second. If you follow the Earth (3rd terrestrial body) through an orbit, that simulates a full calendar year & gives a sense of how the planets move about the Sun relative to one another. Future plans include controls to adjust the speed, an interactive informational display."
  url: "https://ryanlaffoon.github.io/solar-system/"
  tags: "HTML, CSS, JavaScript, jQuery"
  icon: "fa fa-sun-o fa-fw"
  
executive-browser:
  name: "Executive Browser"
  page: "/projects/Executive-Browser/"
  author: "Ryan Laffoon"
  year: 2016
  type: "personal"
  action: "Built"
  blurb: "Simple AngularJS application to display information about US Presidents"
  description: "This is a simple application built to parse and view data pertaining to current & former members of the Executive Branch of the United States (US Presidents). I wanted to construct something using AngularJS, and targeted one of my former ASP.Net applications for a re-write. This application stemmed from a previous personal project which never made it to publication & was unfortunately lost with a computer failure - a harsh lesson in the importance of backups."
  url: "https://ryanlaffoon.github.io/executive-browser/"
  tags: "HTML, AngularJS"
  icon: "fa fa-user-circle fa-fw"
  
quote-tool:
  name: "Quote Tool"
  page: "/projects/Quote-Tool/"
  author: "Ryan Laffoon"
  year: 2016
  type: "proprietary"
  owner: "Lowe's"
  company: lowes
  action: "Created"
  blurb: "Tool allowing sales associates to produce custom order quotes for customers. Increased responsiveness and performance from older systems."
  description: "This project was guided by my team from the planning phases through development, as we had historically supported the tool's legacy predecessor. The framework for the tool utilized N-Tier architecture to move data through a Web API service and serve the front-end using MVC & asynchronous JavaScript. My team designed and crafted the product alongside our business analyst and project management members through dozens of successful sprints and major organizational changes."
  purpose: "The purpose of this project was to replace a legacy predecessor system with a more efficient & scalable solution. The origins of the project stemmed from the end of the Web Platform Upgrade project with Lowe's, when major internal web applications were reviewed. The existing tool fit the bill for a rewrite project with both the volume of use it experienced and the level improvement which could be leveraged from migration to a modern N-Tier application. The end goal was to deliver a performant, testable, scalable and responsive application to replace and/or expand the functionality of the existing tool."
  result: "The new tool experienced drastically increased performance and responsiveness in comparison with its legacy predecessor. Test-Driven architecture was utilized to enhance product maintainability."
  tags: "C#, ASP.Net, MVC, Web API, SQL, JavaScript"
  icon: "fa fa-question-circle-o fa-fw"
  
platform-redesign:
  name: "Platform Redesign"
  page: "/projects/Platform-Redesign/"
  author: "Ryan Laffoon"
  year: 2015
  type: "proprietary"
  owner: "Lowe's"
  company: lowes
  action: "Executed"
  blurb: "Upgrade of three customer-facing e-commerce websites using multi-tier architecture. Resulted in increased site performance, testing coverage & maintainability."
  description: "This project was my first experience working with a collection of multiple cross-functional enterprise development teams on the same project. As the legacy platform and the development shop were written using earlier versions of the .Net framework, the collective design decision was made to migrate the existing code to the latest stable framework version using an N-Tier architecture. Legacy VB and ASP code was converted to C#, and patterns and practices for development were introduced and standardized across teams. Many challenges and obstacles were encountered by all of the teams, but were successfully overcome as the season and deployment freeze ended."
  purpose: "The purpose of this project was to upgrade an enterprise ecommerce web solution encompassing three company divisions with a more efficient & scalable solution. The origins for this project stem from years of rapid growth and the associated accumulation of technical debt as ATGStores.com grew from a startup and thrived through acquisition to become the west coast facing customer support center for Lowe's. The opportunity to focus on internal improvement opened during the first holiday season during ATGStores transition to Lowes, as the development department experienced an annual deployment freeze. The end goal of the project was to take the opportunity of a deployment freeze to redesign the architecture of the web platform and reduce the accumulation of technical debt through the introduction of software development patterns and practices."
  result: "Performance in key site areas was greatly enhanced through the replacement of legacy code with modern frameworks. Maintainability was improved through the introduction and improvement of software development patterns and practices in order to reduce the accumulation of technical debt. Automated testing coverage was introduced or expanded upon as the focus of the company shifted toward continuous improvement & continuous delivery."
  url: "http://www.atgstores.com"
  tags: "C#, ASP.Net, MVC, SQL, JavaScript"
  icon: "fa fa-code fa-fw"
  
conversion-dashboard:
  name: "Conversion Dashboard"
  page: "/projects/Conversion-Dashboard/"
  author: "Ryan Laffoon"
  year: 2014
  type: "proprietary"
  owner: "SurfMyAds.com"
  company: surfmyads
  action: "Developed"
  blurb: "Web interface and service for tracking and analyzing promotion usage, interfacing with revenue tracking system for appropriation of earnings."
  description: "This project was an extension of the previous Revenue Tracking System which I had built and maintained for SurfMyAds. Web interface and service for tracking and analyzing promotion usage, interfacing with revenue tracking system for appropriation of earnings."
  purpose: "The purpose of this project was to expand upon the Revenue Tracking System previously built at SurfMyAds, extending the reach of the system's tracking and the depth of its reporting abilities. The project originated from discussions on the effects of the implementation of the previous Revenue Tracking System, and the revelation that some manual attribution processes were still necessary alongside the automated ones. The end goal of the project was to enhance the existing tracking system to include source attribution tracking, allowing more granular reporting and reducing or removing resources used in manual tracking tasks."
  result: "The tracking and reporting system was successfully developed to completion and integrated with the previous Revenue Tracking System. Additional resources used to manually track affiliate commission attributions were reduced along with human-error through automated processes. The system continues to evolve, adapting to business needs and remains in use to this day."
  tags: "C#, ASP.Net, MVC, Web API, SQL, JavaScript"
  icon: "fa fa-bar-chart fa-fw"
  
revenue-dashboard:
  name: "Revenue Dashboard"
  page: "/projects/Revenue-Dashboard/"
  author: "Ryan Laffoon"
  year: 2013
  type: "proprietary"
  owner: "SurfMyAds.com"
  company: surfmyads
  action: "Created"
  blurb: "Web interface and service for tracking and reporting commissionable earnings from affiliate partners."
  description: "This project was guided through design by my small team, and I was given the opportunity to claim ownership of development for the product. The separation between desired functions clearly lended itself to development of RESTful microservices to retrieve data, modeling of a universal affiliate transaction data set, and design of an efficient web portal for reporting. Having ownership over the project, I was directly involved with the design, development, and continuous improvement of the product through my tenure at SurfMyAds."
  purpose: "The purpose of this project was to create an automated solution to replace a manual revenue tracking and reporting process. The needs for the project originated prior to my joining the SurfMyAds team, and describing my thoughts on this project/solution was a key part of my interview process. As a business based on internet promotions and marketing, there was a very strong need for a centralized system to interact with multiple affiliate-marketing partners regarding earnings tracking. The end goal was to develop an automated, extensible platform based on micro services to track and report commissionable revenue earnings and reduce or remove resources used in manual tracking tasks."
  result: "The tracking services and reporting system were successfully developed to completion, and deployed to production use. The amount of resources reduced from the previous manual methods of tracking and reporting was phenomenal, removing several hours of tedious and error-prone verification per affiliate representative each day. The system was eventually expanded further into the Conversion Tracking System, and remains in use to this day."
  tags: "C#, ASP.Net, MVC, Web API, SQL, JavaScript"
  icon: "fa fa-usd fa-fw"
  
pack-check:
  name: "Pack Check"
  page: "/projects/Pack-Check/"
  author: "Ryan Laffoon"
  year: 2012
  type: "proprietary"
  owner: "Fluent Edge Technologies"
  company: fluentedge
  action: "Designed"
  blurb: "Windows application for Ecometry Open-Systems to improve warehouse order packing accuracy and efficiency."
  description: "I personally led this project from design and development through the first major deployment. The product was developed to extend a retail warehouse order fulfillment system. The available interface allowed minimal interaction from the average user, so a custom Windows forms program was developed to expand around the shortcomings of the legacy predecessor program."
  purpose: "The purpose of this project was to create a new solution for warehouse order packing in Ecometry Open-Systems based on functionality from a legacy system. The project originated from a client wishing to improve upon the tools used by his warehouse order packing team, and I guided the project through design and development with them. The end goal was to craft a reusable solution which could be integrated with any Ecometry Open-Systems client desiring a similar function."
  result: "The product was developed to completion for the original client and successfully deployed to their production fulfillment line. Since then, multiple Ecometry clients have requested similar integrations and further product improvements."
  url: "http://fluentedge.com/index.php/products/18-products/26-pack-check"
  tags: "C#, Windows Forms, SQL"
  icon: "fa fa-check-circle-o fa-fw"
  
ecometry-merge:
  name: "Ecometry Merge"
  page: "/projects/Ecometry-Merge/"
  author: "Ryan Laffoon"
  year: 2011
  type: "proprietary"
  owner: "Fluent Edge Technologies"
  company: fluentedge
  action: "Developed"
  blurb: "Multi-threaded program to merge complete ecommerce data sets into a single source while preserving data integrity."
  description: "This project was my first major undertaking as a professional developer, and I was given the opportunity to design, develop, and deploy the final product. Research was conducted on the Ecometry system to identify dependencies and maintain integrity. As the primary function of the service was low-level and data-centric in nature, the solution was developed as a class library in C# using SQL stored procedures and accessed through scheduled executables. Multi-Threading was employed to process separate sections of data in parallel wherever possible to increase efficiency."
  purpose: "The purpose of this project was to create solution capable of merging large retail Ecometry databases. The project originated from a client wishing to merge two major retail divisions, each containing their own Ecometry solution. The end goal was to craft a reusable solution and eventually offer more complex data migration services as a business service."
  result: "The application was developed to completion for the original retail client and successfully deployed, resulting in a nearly 50% reduction in maintenance overhead of the redundant system."
  tags: "C#, SQL, Multi-Threading"
  icon: "fa fa-database fa-fw"
